Things to do to improve the interpreter.

General Refactorings
	- Rename symtable to hashtable.
	- Remove circular includes between value and ASTNode.
	- Possibly switch to 8 column tabs
	- Ensure all functions are properly prefixed / check variable naming.
	- Look to switch back to C89. (Anonymous unions go away, yuck).
	- See if we can't localize stdlib usage to the print function and #ifdef it
		X Related to memory management refactoring.

Refactor memory management.
	- Have the lexer take an array of astnodes like JSMN or the lexer.
		X Out of memory condition is now deterministic, can bubble easily.
		X Similarly can handle the evaluator.

Add error handling through error tokens & parser errors.
	- Need to add additional error handling code in parser.

Begin implementing a standard library for the APL.
	- Implement the functions from APL's game of life first.

Implement parallelism:
	- (Task?) Throw each operation onto a thread.
	- (Data?) Throw each block (size?) of array elements on a thread.

(Likely after senior project):
Make a REPL.
	- editline (BSD licensed).
	- Network the REPL. (unREPL from Clojure is a good example).
		x Make a protocol for the REPL.
		x Ensure it works in the webassembly environment.
